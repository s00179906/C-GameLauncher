<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GameLauncher">

    <!--Basic Hoverless button style-->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--Style for close buttons-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}" x:Key="CloseButtonStyle">
        <Setter Property="Foreground" Value="{StaticResource MainPurpleBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="Padding" Value="0"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
            </Trigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                        From="{StaticResource MainPurple}" To="{StaticResource MainWhite}" Duration="0:0:0.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color"
                                        From="{StaticResource MainWhite}" To="{StaticResource MainPurple}" Duration="0:0:0.2" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--Style for Window minimize and maximize-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=Hoverless}" x:Key="WindowMinMaxStyle">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="FontSize" Value="16"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style for Window close button-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=WindowMinMaxStyle}" x:Key="WindowCloseStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}" x:Key="ChooseEXESelectButton">
        <Setter Property="Background" Value="{StaticResource MainPurpleBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>


    <!--Filter Menu button style-->
    <Style TargetType="{x:Type Button}" x:Key="FilterMenuButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{TemplateBinding Border.CornerRadius}" 
                        BorderBrush="Gray" 
                        BorderThickness="1,1,1,1">
                        <ContentPresenter 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="Border.CornerRadius" Value="30" />
        <!--<Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="50" ShadowDepth="0" Opacity="1"/>
            </Setter.Value>
        </Setter>-->
    </Style>



    <!--Button Style For GAME Platforms Side Menu-->
    <Style TargetType="{x:Type Button}" x:Key="PlatformButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Button.Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#3F51B5" Opacity="0.5" BlurRadius="30" ShadowDepth="5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"  Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--Game Button Style Regular Cover-->
    <!--<Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#373737" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />

        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    -->
    <!--Mouse Over Event-->
    <!--
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Width" Value="220" />
                            <Setter Property="Height" Value="300" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="25" />

            </Style>
        </Style.Resources>


    </Style>-->

    <!--Game Button Style Wide Cover-->
    <Style TargetType="{x:Type Button}" x:Key="GameButtonStyle">
        <Setter Property="Height" Value="248" />
        <Setter Property="Width" Value="480" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderThickness="2">
                        
                        <ContentPresenter Content="{TemplateBinding Content}"     
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                       
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource BorderBlueBrush}"/>
                            <Setter TargetName="border" Property="Border.CornerRadius" Value="35"/>
                            <Setter TargetName="border" Property="Border.Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="2"
                                              Color="{StaticResource BorderBlue}"
                                              Opacity="0.3"
                                              BlurRadius="55"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                        From="{StaticResource BorderBlue}" 
                                        To="{StaticResource MainPurple}" 
                                        Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                       
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>-->
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Rectangle}" x:Key="RectTest">
        <Setter Property="Width" Value="420"/>
        <Setter Property="Height" Value="188"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                         Storyboard.TargetProperty="(Rectangle.Width)"
                                         To="440" Duration="0:0:0.1"
                                          />
                        <DoubleAnimation
                                         Storyboard.TargetProperty="(Rectangle.Height)"
                                         To="198" Duration="0:0:0.1"
                                          />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                         Storyboard.TargetProperty="(Rectangle.Width)"
                                         To="420" Duration="0:0:0.1"
                                          />
                        <DoubleAnimation
                                         Storyboard.TargetProperty="(Rectangle.Height)"
                                         To="188" Duration="0:0:0.1"
                                          />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>